class analysedText(object):
    
    def __init__ (self, text):
        formated_text = text.replace(".","").replace("!","").replace(",","").replace("?","")
        formated_text = formated_text.lower()
        self.fmtText = formated_text 

        # TODO: Remove the punctuation from <text> and make it lower case.

        # TODO: Assign the formatted text to a new attribute called "fmtText"
        
        pass 
    
    def freqAll(self):
        list_split = self.fmtText.split()
        dict_count = dict()
        
        for word in set(list_split):
            dict_count[word] = list_split.count(word)
        return dict_count
    

        # TODO: Split the text into a list of words  

        # TODO: Create a dictionary with the unique words in the text as keys
        # and the number of times they occur in the text as values
      
        pass # return the created dictionary
    
    def freqOf(self, word):

        # TODO: return the number of occurrences of <word> in <fmtText>
        counted_words = self.freqAll()
        
        if word in counted_words:
            return counted_words[word]
        else:
            return 0

        pass
        
        """
        sample to test code
        
        
        import sys

sampleMap = {'eirmod': 1,'sed': 1, 'amet': 2, 'diam': 5, 'consetetur': 1, 'labore': 1, 'tempor': 1, 'dolor': 1, 'magna': 2, 'et': 3, 'nonumy': 1, 'ipsum': 1, 'lorem': 2}

def testMsg(passed):
    if passed:
       return 'Test Passed'
    else :
       return 'Test Failed'

print("Constructor: ")
try:
    samplePassage = analysedText("Lorem ipsum dolor! diam amet, consetetur Lorem magna. sed diam nonumy eirmod tempor. diam et labore? et diam magna. et diam amet.")
    print(testMsg(samplePassage.fmtText == "lorem ipsum dolor diam amet consetetur lorem magna sed diam nonumy eirmod tempor diam et labore et diam magna et diam amet"))
except:
    print("Error detected. Recheck your function " )
print("freqAll: ")
try:
    wordMap = samplePassage.freqAll()
    print(testMsg(wordMap==sampleMap))
except:
    print("Error detected. Recheck your function " )
print("freqOf: ")
try:
    passed = True
    for word in sampleMap:
        if samplePassage.freqOf(word) != sampleMap[word]:
            passed = False
            break
    print(testMsg(passed))
    
except:
    print("Error detected. Recheck your function  " )
    """
